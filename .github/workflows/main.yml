---

name: Main

on: [push, pull_request]

jobs:
  go-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Go test
      run: |
        # we run vet in another step
        go test -vet=off -timeout=1m ./...
        # -race can easily make the crypto stuff 10x slower
        go test -vet=off -timeout=15m -race ./...

    - name: Go analyze
      run: |
        diff -u <(echo -n) <(gofmt -s -d $(git ls-files '*.go'))
        go vet ./...
        curl -L https://github.com/dominikh/go-tools/releases/download/2020.1.5/staticcheck_linux_amd64.tar.gz | tar -xzf -
        ./staticcheck/staticcheck ./...

  compose-test:
    runs-on: ubuntu-latest
    #needs: [go-tests]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      # - uses: docker/setup-buildx-action@v1
      #   id: buildx
      #   with:
      #     install: true
      - name: Run compose script
        run: |
          docker buildx version
          export COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1
          export DOCKER_CLI_EXPERIMENTAL=enabled
          # Steps only needed in custom multi-job runner
          # export COMPOSE_PROJECT_NAME=${RANDOM}${RANDOM}_testsuite
          # export TESTSUITE_BUILD_TAG=${CI_COMMIT_SHA::10}
          # export COMPOSE_HOST_PATH=${PWD}/dockerfiles/testsuite
          # export COMPOSE_DVOTE_PORT_MAPPING="9090" # Will use a random available port mapping
          cd dockerfiles/testsuite
          docker-compose build
          sh start_test.sh

  docker-release:
    runs-on: ubuntu-latest
    needs: [go-tests, compose-test]
    if:
      github.ref == 'refs/heads/master' || github.ref == 'refs/heads/stage' || github.ref == 'refs/heads/release-*'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: vdo/go-dvote
          tag_with_ref: true